PART
{
// Kerbal Space Program - Part Config
//
//

// --- general parameters ---
name = largeAwacs
module = Part
author = XBRSQ

// --- asset parameters ---
mesh = radar2.mu
rescaleFactor = 1.3


// --- node definitions ---
node_attach = 0.0, 0, 0, 0, -1, 0, 0


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 25000
cost = 10000
category = none
bdacategory = Radars
subcategory = 0
bulkheadProfiles = srf
title = #loc_VAF_largeAwacs_title  //AWACS Detection Radar
manufacturer = #loc_VAF_agent_title  //Bahamuto Dynamics
description = #loc_VAF_largeAwacs_descr
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 1.5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600


MODULE
{
	name = ModulePartVariants
	baseVariant = Legged
	useMultipleDragCubes = false
	VARIANT
	{
		name = Legged
		displayName =  #loc_BDArmory_part_AWACS_Legged
		primaryColor = #ffffff
		secondaryColor = #000000
		GAMEOBJECTS
		{
			Cube = true
			Sphere = true
			collider = true
			legless_Sphere = false
			legless_collider = false
		}
	}		
	VARIANT
	{
		name = Legless
		displayName = #loc_BDArmory_part_AWACS_Legless
		primaryColor = #ffffff
		secondaryColor = #ffffff
		GAMEOBJECTS
		{
			Cube = false
			Sphere = false
			collider = false
			legless_Sphere = true
			legless_collider = true
		}		
	}	
}

MODULE
{
  	name = ModuleRadar

	// -- Section: General Configuration --
	radarName = AWACS Detection Radar		// if left empty part.title is used, but advised to set this to a nice printable text
	rwrThreatType = 2				// IMPORTANT, please set correctly:
							// 0 = SAM site radar
							// 1 = Fighter radar (airborne)
							// 2 = AWACS radar (airborne)
							// 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
							// 5 = Detection radar (ground/ship based)
							// 6 = SONAR (ship/submarine based)
	rotationTransformName = rotationTransform
	//turretID = 0					// if needed
	resourceDrain = 1.5				// change to higher values for more capable radars, e.g AESA

	// -- Section: Capabilities --
	omnidirectional = true				// false: boresight scan radar
	directionalFieldOfView = 90			// for omni and boresight
	//boresightFOV = 10				// for boresight only
	scanRotationSpeed = 110				// degress per second
	//lockRotationSpeed = 120				// only relevant if canLock
	//lockRotationAngle = 4
	showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
	//multiLockFOV = 30				// only relevant if canLock
	//lockAttemptFOV = 2				// only relevant if canLock
    	//maxLocks = 1					//how many targets can be locked/tracked simultaneously. only relevant if canLock

	canScan = true					// scanning/detecting targets (volume search)
	canLock = false					// locking/tracking targets (fire control)
  	canTrackWhileScan = false			// continue scanning while tracking a locked target
  	canReceiveRadarData = true			// can work as passive data receiver

  	minSignalThreshold = 50				// DEPRECATED, NO LONGER USED! use detection float curve!
	//minLockedSignalThreshold = 90			// DEPRECATED, NO LONGER USED! use locktrack float curve!

	radarGroundClutterFactor = 0.2			// how much is the radar efficiency reduced to by ground clutter/look-down?
							// 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
							// 1.0 = fully efficient (no difference between air & ground targets)
							// default if unset: 0.25
							// Ground targets, especially ships, already have a massively larger RCS than fighters, hence
							// any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
							// values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

	radarDetectionCurve
          {
            // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
            // this defines both min/max range of the radar, and sensitivity/efficiency
            // it is recommended to define an "assured detection range", at which all craft are detected regardless
            //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
            //        key = distance	rcs
                      key = 0 	0
                      key = 4 	0.01007
                      key = 8 	0.01117
                      key = 12 	0.01592
                      key = 16 	0.02872
                      key = 20 	0.05571
                      key = 24 	0.10479
                      key = 28 	0.18562
                      key = 32 	0.30959
                      key = 36 	0.48989
                      key = 40 	0.74143
                      key = 44 	1.08088
                      key = 48 	1.52669
                      key = 52 	2.09903
                      key = 56 	2.81986
                      key = 60 	3.71286
                      key = 64 	4.80349
                      key = 68 	6.11896
                      key = 72 	7.68824
                      key = 76 	9.54205
                      key = 80 	11.71286
                      key = 84 	14.2349
                      key = 88 	17.14415
                      key = 92 	20.47837
                      key = 96 	24.27704
                      key = 100	28.58143
	  } 	// GENERATED BY XBRSQ'S AUTOGENERATOR
	    	// args: 4, 100, 4, 3500000

	radarLockTrackCurve
	{
		// same as detectionCurve, just for locking/tracking purpose
		// ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
		//   ECM-jammers & chaff completely ineffective!!

		// nothing defined here as this radar does not support locking
	}

}



}
